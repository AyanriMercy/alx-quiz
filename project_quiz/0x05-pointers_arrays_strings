Question #0
We declare the following variable

int arr[5];

ANSWER - *(arr + 2)

Question #1
What is the value of n after the following code is executed?

int n = 98;
int *p = &n;

*p = 402;

ANSWER - 402

Question #2
What is the size of a pointer to an int (on a 64-bit architecture)

ANSWER - 8 bytes

Question #3
What happens when one tries to access an illegal memory location?

ANSWER - Segmentation fault

Question #4
What is the size of a pointer to a char (on a 64-bit architecture)

ANSWER - 8 bytes

Question #5
We declare the following variable

int arr[5];
What is the size in memory of the variable arr?

ANSWER - 20 bytes

Question #6
What is the value of n after the following code is executed?

int n = 98;
int *p = &n;

p = 402;

ANSWER - 98

Question #7
What is the identifier to print an address with printf?

ANSWER - %p

Question #8
If we have a variable called var of type int, how can we get its address in memory?

ANSWER - &var

Question #9
What is the value of n after the following code is executed?

int n = 98;
int *p = &n;

*p++;

ANSWER - 98

Question #10
Is it possible to declare a pointer to a pointer?

ANSWER - Yes

Question #11
What is the value of n after the following code is executed?

int n = 98;
int *p = &n;

ANSWER - 98

Question #12
The process of getting the value that is stored in the memory location pointed to by a pointer is called:

ANSWER - Dereferencing
